function uniteUnique(arr) {
  let arr1=[];
  for (let i=0;i<arguments.length;i++){
    for (let j=0;j<arguments[i].length;j++){
      if (!arr1.includes(arguments[i][j])){  //!arr1.includes(arguments[i][j]) significa si el argumento[i][j] NO (SÍMBOLO !) está en arr1, agregarlo. 
        arr1.push(arguments[i][j]);
      }
    }
  }
  return arr1;
}

console.log(uniteUnique([1, 3, 2], [5, 2, 1, 4], [2, 1]));

/*Consigna: Pongo muchos arrays y hacer un nuevo array sin repetir números */

/*Solución: Creo array vacío y le voy llenando con los números que no tenga */


/* Otra Solución:
function uniteUnique(...arr) {
  return [...new Set(arr.flat())];
}
arr.flat te une las arrays que le pongas var arr1 = [1, 2, [3, 4]];
arr1.flat();
// [1, 2, 3, 4]

var arr2 = [1, 2, [3, 4, [5, 6]]];
arr2.flat();
// [1, 2, 3, 4, [5, 6]]

var arr3 = [1, 2, [3, 4, [5, 6]]];
arr3.flat(2);
// [1, 2, 3, 4, 5, 6]

Y EL new Set te deja guardar valores UNICOS (al ser únicos, no va a tomar los repetidos)

*/