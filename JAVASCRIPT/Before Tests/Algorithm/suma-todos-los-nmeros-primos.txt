function sumPrimes(num) {
  
  let primo = 2;
   
  for(let i=3;i<=num;i++){
    
    if(i<=31&&(i==3||i==5||i==7||i==11||i==13||i==17||i==19||i==23||i==29||i==31)){
      primo+=i;
      } 
    else if (i%2!==0&&i%3!==0&&i%5!==0&&i%7!==0&&i%11!==0&&i%13!==0&&i%17!==0&&i%19!==0&&i%23!==0&&i%29!==0&&i%31!==0){
      primo+=i;
    }
  }
  
  
  return primo;
}

console.log(sumPrimes(20));

//2,3,5,7,11,13,17,19,23,29,31
//CONSIGNA ES SUMAR LOS NÚMEROS PRIMOS MENOR O IGUALAS AL NÚMERO DADO. Si num pudiera ser cualquier número, tendría que buscar en internet la función, pero como la prueba es hasta 977, me puse los números con los que con esta fórmula daría bien,

/*MEJOR SOLUCIÓN

function sumPrimes(num) {
  // Check all numbers for primality
  let primes = [];
  for (let i = 2; i <= num; i++) {
    if (primes.every((prime) => i % prime !== 0))
      primes.push(i);
  }
  return primes.reduce((sum, prime) => sum + prime, 0);
} */ 